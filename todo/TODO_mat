1. When the MATLAB version is implemented (e.g., newuoa_mat), we may remove the 'matlab/interfaces/' directory,
and put its content directly below matlab/

20230108: put the MEX files under newuoa_for, and name them ast newuoa_for_dgm, etc? What about gethuge?
githuge is used only in preprima and maxint, the latter again only used in preprima.

2. Make newuoa etc unavailable to the end users. (?)

3. 20230128: Check what happens with
cobyla(macup('LHAIFAM'))
The classical version works well, but not the new one.
Update: cobylb.f90 has been updated to improve the modernized COBYLA on this problem. Yet its
performance is still inferior compared with the classical one.
Update 20230810: The two solvers differ significantly at the 102th function evaluation, the problem
dimension being 99. The difference is because the new implementation allows the trust-region radius
to increase. The first trust-region step is very successful (ratio > 1.5), and hence the new version
increases the trust-region radius, leading to a very different iterate compared with the classical
version.

4. The infos (exitflags) should be returned from a function, not to hard code them.

5. 20250814 Update matlab/compile.m to include

-ftrampoline-impl=heap

in the compilation flags for gfortran 14+. This will remove the warnings about executable stack.
After doing so, remember to run all the test with MATLAB R2024b-, as the internal procedures were
removed in R2025a.

In addition, try the linker option `-Wl,-z,noexecstack`, which marks the stack as non-executable.
